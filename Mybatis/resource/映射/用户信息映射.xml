<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xyz.yurihentai.映射.用户信息映射">

    <!-- 开启二级缓存
        1、eviction（缓存回收策略，默认LRU）
                LRU – 最近最少使用的：移除最长时间不被使用的对象。
                FIFO – 先进先出：按对象进入缓存的顺序来移除它们。
                SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。
                WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。
        2、flushInterval（刷新间隔，单位毫秒）
                不设置默认没有刷新间隔，仅仅调用语句时刷新缓存
        3、size
                代表缓存最多可以存储多少个对象，设置过大容易导致内存溢出
        4、readOnly（是否只读，默认false）
                true：会给所有调用者返回缓存对象的本实例。因此这些对象不能被修改。这提供了很重要的性能优势。
                false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全
        5、type
                使用的缓存类型
     -->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache" eviction="LRU" flushInterval="600000" size="300" readOnly="false"/>

    <!-- 拼接参数的方式 -->
    <!--
        #{key}：预编译到sql中，安全
        ${key}：作为字符串拼接到sql中，有被sql注入攻击的风险
    -->
    <!--
        1、userCache：是否使用二级缓存
        2、flushCache：在sql语句执行后同时清空一级和二级缓存
                <insert>、<update>、<delete>默认为true
                <select>默认为false
    -->
    <select id="查找" resultType="用户信息" useCache="false" flushCache="false">
        SELECT 主键, 姓名, 性别, 年龄, 生日, 身份证号, 创建时间, 修改时间
        FROM 用户信息表
        WHERE 主键 = #{主键} and 是否删除 = 0
    </select>

    <insert id="新增" parameterType="用户信息" useGeneratedKeys="true" keyProperty="主键" databaseId="mysql">
        INSERT INTO 用户信息表(主键, 姓名, 性别, 年龄, 生日, 身份证号, 创建时间)
        VALUES(#{主键}, #{姓名}, #{性别}, #{年龄}, #{生日}, #{身份证号}, #{创建时间})
    </insert>
    <insert id="新增" parameterType="用户信息" databaseId="oracle">
        INSERT INTO 用户信息表(主键, 姓名, 性别, 年龄, 生日, 身份证号, 创建时间)
        VALUES(#{主键}, #{姓名}, #{性别}, #{年龄}, to_date(#{生日},'yyyy-mm-dd hh24:mi:ss'), #{身份证号}, to_date(#{创建时间},'yyyy-mm-dd hh24:mi:ss'))
    </insert>

    <update id="更新" parameterType="用户信息" databaseId="mysql">
        UPDATE 用户信息表
        SET 姓名 = #{姓名}, 性别 = #{性别}, 年龄 = #{年龄},
            生日 = #{生日}, 身份证号 = #{身份证号}, 修改时间 = #{修改时间}
        WHERE 主键 = #{主键}
    </update>
    <update id="更新" parameterType="用户信息" databaseId="oracle">
        UPDATE 用户信息表
        SET 姓名 = #{姓名}, 性别 = #{性别}, 年龄 = #{年龄}, 身份证号 = #{身份证号},
            生日 = to_date(#{生日},'yyyy-mm-dd hh24:mi:ss'), 修改时间 = to_date(#{修改时间},'yyyy-mm-dd hh24:mi:ss')
        WHERE 主键 = #{主键}
    </update>

    <update id="删除" parameterType="String">
        UPDATE 用户信息表
        SET 是否删除 = 1
        WHERE 主键 = #{主键}
    </update>

    <delete id="真删" parameterType="String">
        DELETE FROM 用户信息表
        WHERE 主键 = #{主键}
    </delete>

</mapper>
