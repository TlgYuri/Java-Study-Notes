<?xml version="1.0" encoding="UTF-8"?>
<configuration status="info">
    <Properties>
        <Property name="LOG_HOME">../logs</Property>
        <Property name="APP_LOG_HOME">${LOG_HOME}</Property>
    </Properties>

    <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
                        <!--只接受程序中DEBUG级别的日志进行处理-->
                        <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
                        <PatternLayout pattern="[%d{HH:mm:ss.SSS}] %-5level %class{36} %L %M - %msg%xEx%n"/>
                    </Console>
        <!--处理DEBUG级别的日志，并把该日志放到logs/internet-estate-server-debug.log文件中-->
        <!--打印出DEBUG级别日志，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
                <RollingRandomAccessFile name="RollingFileDebug"
                                         immediateFlush="true"
                                         fileName="${APP_LOG_HOME}/debug/internet-estate-server-debug.log"
                                         filePattern="${APP_LOG_HOME}/debug/internet-estate-server-debug.log.%d{yyyy-MM-dd}.gz">
                    <Filters>
                        <!--只接受DEBUG级别的日志，其余的全部拒绝处理-->
                        <ThresholdFilter level="DEBUG"/>
                        <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>
                    </Filters>
                    <!--输出日志的格式-->
                    <PatternLayout>
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n</pattern>
    </PatternLayout>
        <Policies>
            <TimeBasedTriggeringPolicy interval="1" modulate="true" />
        </Policies>
        <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
        <!-- DefaultRolloverStrategy字段中加入max=“30”经测试是配合SizeBasedTriggeringPolicy限制%i的存在数量，并没有发现是网上流传的是最多保存多少个文件的限制，也或许是我写的有问题 -->
        <DefaultRolloverStrategy>
            <Delete basePath="${APP_LOG_HOME}/debug" maxDepth="1">
                <IfFileName glob="internet-estate-server-debug.log.*.gz" />
                <IfLastModified age="30d" />
            </Delete>
        </DefaultRolloverStrategy>
                </RollingRandomAccessFile>
        <!--处理INFO级别的日志，并把该日志放到logs/internet-estate-server-info.log文件中-->
                <RollingRandomAccessFile name="RollingFileInfo"
                                         immediateFlush="true"
                                         fileName="${APP_LOG_HOME}/info/internet-estate-server-info.log"
                                         filePattern="${APP_LOG_HOME}/info/internet-estate-server-info.log.%d{yyyy-MM-dd}.gz">
                    <Filters>
                        <!--只接受INFO级别的日志，其余的全部拒绝处理-->
                        <ThresholdFilter level="INFO"/>
                        <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
                    </Filters>
                    <!--输出日志的格式-->
            <PatternLayout>
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n</pattern>
    </PatternLayout>
        <Policies>
            <TimeBasedTriggeringPolicy interval="1" modulate="true" />
        </Policies>
        <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
        <DefaultRolloverStrategy>
            <Delete basePath="${APP_LOG_HOME}/info" maxDepth="1">
                <IfFileName glob="internet-estate-server-info.log.*.gz" />
                <IfLastModified age="30d" />
            </Delete>
        </DefaultRolloverStrategy>
                </RollingRandomAccessFile>
        <!--处理WARN级别的日志，并把该日志放到logs/internet-estate-server-warn.log文件中-->
                <RollingRandomAccessFile name="RollingFileWarn"
                                         immediateFlush="true"
                                         fileName="${APP_LOG_HOME}/warn/internet-estate-server-warn.log"
                                         filePattern="${APP_LOG_HOME}/warn/internet-estate-server-warn.log.%d{yyyy-MM-dd}.gz">
                    <Filters>
                        <!--只接受WARN级别的日志，其余的全部拒绝处理-->
                        <ThresholdFilter level="WARN"/>
        <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                    </Filters>
                    <!--输出日志的格式-->
                    <PatternLayout>
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n</pattern>
    </PatternLayout>
        <Policies>
            <TimeBasedTriggeringPolicy interval="1" modulate="true" />
        </Policies>
        <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
        <DefaultRolloverStrategy>
            <Delete basePath="${APP_LOG_HOME}/warn" maxDepth="1">
                <IfFileName glob="internet-estate-server-warn.log.*.gz" />
                <IfLastModified age="30d" />
            </Delete>
        </DefaultRolloverStrategy>
                </RollingRandomAccessFile>
        <!--处理ERROR级别的日志，并把该日志放到logs/internet-estate-server-warn.log文件中-->
                <RollingRandomAccessFile name="RollingFileError"
                                         immediateFlush="true"
                                         fileName="${APP_LOG_HOME}/error/internet-estate-server-error.log"
                                         filePattern="${APP_LOG_HOME}/error/internet-estate-server-error.log.%d{yyyy-MM-dd}.gz">
                    <ThresholdFilter level="ERROR"/>
                    <!--输出日志的格式-->
                    <PatternLayout>
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n</pattern>
    </PatternLayout>
        <Policies>
            <TimeBasedTriggeringPolicy interval="1" modulate="true" />
        </Policies>
        <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
        <DefaultRolloverStrategy>
            <Delete basePath="${APP_LOG_HOME}/error" maxDepth="1">
                <IfFileName glob="internet-estate-server-error.log.*.gz" />
                <IfLastModified age="30d" />
            </Delete>
        </DefaultRolloverStrategy>
                </RollingRandomAccessFile>
    </Appenders>
    <Loggers>
        <!--默认的root的logger-->
                <AsyncRoot level="INFO" includeLocation="true">
                    <appender-ref ref="Console"/>
                    <appender-ref ref="RollingFileInfo"/>
                    <appender-ref ref="RollingFileWarn"/>
                    <appender-ref ref="RollingFileError"/>
                    <appender-ref ref="RollingFileDebug"/>
                </AsyncRoot>
    </Loggers>
</configuration>